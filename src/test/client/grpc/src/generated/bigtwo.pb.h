// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bigtwo.proto
// Protobuf C++ Version: 5.29.3

#ifndef bigtwo_2eproto_2epb_2eh
#define bigtwo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_bigtwo_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_bigtwo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_bigtwo_2eproto;
namespace bigtwo {
class ActivityEntry;
struct ActivityEntryDefaultTypeInternal;
extern ActivityEntryDefaultTypeInternal _ActivityEntry_default_instance_;
class ActivityLogRequest;
struct ActivityLogRequestDefaultTypeInternal;
extern ActivityLogRequestDefaultTypeInternal _ActivityLogRequest_default_instance_;
class ActivityLogResponse;
struct ActivityLogResponseDefaultTypeInternal;
extern ActivityLogResponseDefaultTypeInternal _ActivityLogResponse_default_instance_;
class Card;
struct CardDefaultTypeInternal;
extern CardDefaultTypeInternal _Card_default_instance_;
class ChatRequest;
struct ChatRequestDefaultTypeInternal;
extern ChatRequestDefaultTypeInternal _ChatRequest_default_instance_;
class ChatResponse;
struct ChatResponseDefaultTypeInternal;
extern ChatResponseDefaultTypeInternal _ChatResponse_default_instance_;
class DealRequest;
struct DealRequestDefaultTypeInternal;
extern DealRequestDefaultTypeInternal _DealRequest_default_instance_;
class DealResponse;
struct DealResponseDefaultTypeInternal;
extern DealResponseDefaultTypeInternal _DealResponse_default_instance_;
class DealResponse_DealtHandsEntry_DoNotUse;
struct DealResponse_DealtHandsEntry_DoNotUseDefaultTypeInternal;
extern DealResponse_DealtHandsEntry_DoNotUseDefaultTypeInternal _DealResponse_DealtHandsEntry_DoNotUse_default_instance_;
class GameStateRequest;
struct GameStateRequestDefaultTypeInternal;
extern GameStateRequestDefaultTypeInternal _GameStateRequest_default_instance_;
class GameStateResponse;
struct GameStateResponseDefaultTypeInternal;
extern GameStateResponseDefaultTypeInternal _GameStateResponse_default_instance_;
class Hand;
struct HandDefaultTypeInternal;
extern HandDefaultTypeInternal _Hand_default_instance_;
class JoinRequest;
struct JoinRequestDefaultTypeInternal;
extern JoinRequestDefaultTypeInternal _JoinRequest_default_instance_;
class JoinResponse;
struct JoinResponseDefaultTypeInternal;
extern JoinResponseDefaultTypeInternal _JoinResponse_default_instance_;
class PassRequest;
struct PassRequestDefaultTypeInternal;
extern PassRequestDefaultTypeInternal _PassRequest_default_instance_;
class PassResponse;
struct PassResponseDefaultTypeInternal;
extern PassResponseDefaultTypeInternal _PassResponse_default_instance_;
class PlayRequest;
struct PlayRequestDefaultTypeInternal;
extern PlayRequestDefaultTypeInternal _PlayRequest_default_instance_;
class PlayResponse;
struct PlayResponseDefaultTypeInternal;
extern PlayResponseDefaultTypeInternal _PlayResponse_default_instance_;
class PlayValidationRequest;
struct PlayValidationRequestDefaultTypeInternal;
extern PlayValidationRequestDefaultTypeInternal _PlayValidationRequest_default_instance_;
class PlayValidationResponse;
struct PlayValidationResponseDefaultTypeInternal;
extern PlayValidationResponseDefaultTypeInternal _PlayValidationResponse_default_instance_;
class PlayerRanking;
struct PlayerRankingDefaultTypeInternal;
extern PlayerRankingDefaultTypeInternal _PlayerRanking_default_instance_;
class PlayerRateRequest;
struct PlayerRateRequestDefaultTypeInternal;
extern PlayerRateRequestDefaultTypeInternal _PlayerRateRequest_default_instance_;
class PlayerRateResponse;
struct PlayerRateResponseDefaultTypeInternal;
extern PlayerRateResponseDefaultTypeInternal _PlayerRateResponse_default_instance_;
class RankingRequest;
struct RankingRequestDefaultTypeInternal;
extern RankingRequestDefaultTypeInternal _RankingRequest_default_instance_;
class RankingResponse;
struct RankingResponseDefaultTypeInternal;
extern RankingResponseDefaultTypeInternal _RankingResponse_default_instance_;
class ScoreRequest;
struct ScoreRequestDefaultTypeInternal;
extern ScoreRequestDefaultTypeInternal _ScoreRequest_default_instance_;
class ScoreRequest_FinalHandsEntry_DoNotUse;
struct ScoreRequest_FinalHandsEntry_DoNotUseDefaultTypeInternal;
extern ScoreRequest_FinalHandsEntry_DoNotUseDefaultTypeInternal _ScoreRequest_FinalHandsEntry_DoNotUse_default_instance_;
class ScoreResponse;
struct ScoreResponseDefaultTypeInternal;
extern ScoreResponseDefaultTypeInternal _ScoreResponse_default_instance_;
class ScoreResponse_ScoresEntry_DoNotUse;
struct ScoreResponse_ScoresEntry_DoNotUseDefaultTypeInternal;
extern ScoreResponse_ScoresEntry_DoNotUseDefaultTypeInternal _ScoreResponse_ScoresEntry_DoNotUse_default_instance_;
class StartGameRequest;
struct StartGameRequestDefaultTypeInternal;
extern StartGameRequestDefaultTypeInternal _StartGameRequest_default_instance_;
class StartGameResponse;
struct StartGameResponseDefaultTypeInternal;
extern StartGameResponseDefaultTypeInternal _StartGameResponse_default_instance_;
class TimeoutRequest;
struct TimeoutRequestDefaultTypeInternal;
extern TimeoutRequestDefaultTypeInternal _TimeoutRequest_default_instance_;
class TimeoutResponse;
struct TimeoutResponseDefaultTypeInternal;
extern TimeoutResponseDefaultTypeInternal _TimeoutResponse_default_instance_;
}  // namespace bigtwo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace bigtwo {

// ===================================================================


// -------------------------------------------------------------------

class TimeoutResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.TimeoutResponse) */ {
 public:
  inline TimeoutResponse() : TimeoutResponse(nullptr) {}
  ~TimeoutResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TimeoutResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TimeoutResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TimeoutResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TimeoutResponse(const TimeoutResponse& from) : TimeoutResponse(nullptr, from) {}
  inline TimeoutResponse(TimeoutResponse&& from) noexcept
      : TimeoutResponse(nullptr, std::move(from)) {}
  inline TimeoutResponse& operator=(const TimeoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeoutResponse& operator=(TimeoutResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimeoutResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimeoutResponse* internal_default_instance() {
    return reinterpret_cast<const TimeoutResponse*>(
        &_TimeoutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(TimeoutResponse& a, TimeoutResponse& b) { a.Swap(&b); }
  inline void Swap(TimeoutResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimeoutResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimeoutResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TimeoutResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimeoutResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TimeoutResponse& from) { TimeoutResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TimeoutResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.TimeoutResponse"; }

 protected:
  explicit TimeoutResponse(::google::protobuf::Arena* arena);
  TimeoutResponse(::google::protobuf::Arena* arena, const TimeoutResponse& from);
  TimeoutResponse(::google::protobuf::Arena* arena, TimeoutResponse&& from) noexcept
      : TimeoutResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.TimeoutResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TimeoutResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class TimeoutRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.TimeoutRequest) */ {
 public:
  inline TimeoutRequest() : TimeoutRequest(nullptr) {}
  ~TimeoutRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TimeoutRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TimeoutRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TimeoutRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TimeoutRequest(const TimeoutRequest& from) : TimeoutRequest(nullptr, from) {}
  inline TimeoutRequest(TimeoutRequest&& from) noexcept
      : TimeoutRequest(nullptr, std::move(from)) {}
  inline TimeoutRequest& operator=(const TimeoutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeoutRequest& operator=(TimeoutRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimeoutRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimeoutRequest* internal_default_instance() {
    return reinterpret_cast<const TimeoutRequest*>(
        &_TimeoutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(TimeoutRequest& a, TimeoutRequest& b) { a.Swap(&b); }
  inline void Swap(TimeoutRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimeoutRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimeoutRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TimeoutRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimeoutRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TimeoutRequest& from) { TimeoutRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TimeoutRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.TimeoutRequest"; }

 protected:
  explicit TimeoutRequest(::google::protobuf::Arena* arena);
  TimeoutRequest(::google::protobuf::Arena* arena, const TimeoutRequest& from);
  TimeoutRequest(::google::protobuf::Arena* arena, TimeoutRequest&& from) noexcept
      : TimeoutRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.TimeoutRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TimeoutRequest& from_msg);
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class StartGameResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.StartGameResponse) */ {
 public:
  inline StartGameResponse() : StartGameResponse(nullptr) {}
  ~StartGameResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartGameResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartGameResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartGameResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartGameResponse(const StartGameResponse& from) : StartGameResponse(nullptr, from) {}
  inline StartGameResponse(StartGameResponse&& from) noexcept
      : StartGameResponse(nullptr, std::move(from)) {}
  inline StartGameResponse& operator=(const StartGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartGameResponse& operator=(StartGameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartGameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartGameResponse* internal_default_instance() {
    return reinterpret_cast<const StartGameResponse*>(
        &_StartGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(StartGameResponse& a, StartGameResponse& b) { a.Swap(&b); }
  inline void Swap(StartGameResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartGameResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartGameResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartGameResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartGameResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartGameResponse& from) { StartGameResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartGameResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.StartGameResponse"; }

 protected:
  explicit StartGameResponse(::google::protobuf::Arena* arena);
  StartGameResponse(::google::protobuf::Arena* arena, const StartGameResponse& from);
  StartGameResponse(::google::protobuf::Arena* arena, StartGameResponse&& from) noexcept
      : StartGameResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.StartGameResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartGameResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class StartGameRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.StartGameRequest) */ {
 public:
  inline StartGameRequest() : StartGameRequest(nullptr) {}
  ~StartGameRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartGameRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartGameRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartGameRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartGameRequest(const StartGameRequest& from) : StartGameRequest(nullptr, from) {}
  inline StartGameRequest(StartGameRequest&& from) noexcept
      : StartGameRequest(nullptr, std::move(from)) {}
  inline StartGameRequest& operator=(const StartGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartGameRequest& operator=(StartGameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartGameRequest* internal_default_instance() {
    return reinterpret_cast<const StartGameRequest*>(
        &_StartGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(StartGameRequest& a, StartGameRequest& b) { a.Swap(&b); }
  inline void Swap(StartGameRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartGameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartGameRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartGameRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartGameRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartGameRequest& from) { StartGameRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartGameRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.StartGameRequest"; }

 protected:
  explicit StartGameRequest(::google::protobuf::Arena* arena);
  StartGameRequest(::google::protobuf::Arena* arena, const StartGameRequest& from);
  StartGameRequest(::google::protobuf::Arena* arena, StartGameRequest&& from) noexcept
      : StartGameRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInitiatorPlayerIdFieldNumber = 1,
  };
  // int32 initiator_player_id = 1;
  void clear_initiator_player_id() ;
  ::int32_t initiator_player_id() const;
  void set_initiator_player_id(::int32_t value);

  private:
  ::int32_t _internal_initiator_player_id() const;
  void _internal_set_initiator_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.StartGameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartGameRequest& from_msg);
    ::int32_t initiator_player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class ScoreResponse_ScoresEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  ScoreResponse_ScoresEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScoreResponse_ScoresEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScoreResponse_ScoresEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScoreResponse_ScoresEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScoreResponse_ScoresEntry_DoNotUse*>(
        &_ScoreResponse_ScoresEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_bigtwo_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class RankingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.RankingRequest) */ {
 public:
  inline RankingRequest() : RankingRequest(nullptr) {}
  ~RankingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RankingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RankingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RankingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RankingRequest(const RankingRequest& from) : RankingRequest(nullptr, from) {}
  inline RankingRequest(RankingRequest&& from) noexcept
      : RankingRequest(nullptr, std::move(from)) {}
  inline RankingRequest& operator=(const RankingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RankingRequest& operator=(RankingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RankingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RankingRequest* internal_default_instance() {
    return reinterpret_cast<const RankingRequest*>(
        &_RankingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(RankingRequest& a, RankingRequest& b) { a.Swap(&b); }
  inline void Swap(RankingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RankingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RankingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RankingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RankingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RankingRequest& from) { RankingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RankingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.RankingRequest"; }

 protected:
  explicit RankingRequest(::google::protobuf::Arena* arena);
  RankingRequest(::google::protobuf::Arena* arena, const RankingRequest& from);
  RankingRequest(::google::protobuf::Arena* arena, RankingRequest&& from) noexcept
      : RankingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopFieldNumber = 1,
  };
  // int32 top = 1;
  void clear_top() ;
  ::int32_t top() const;
  void set_top(::int32_t value);

  private:
  ::int32_t _internal_top() const;
  void _internal_set_top(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.RankingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RankingRequest& from_msg);
    ::int32_t top_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PlayerRateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PlayerRateResponse) */ {
 public:
  inline PlayerRateResponse() : PlayerRateResponse(nullptr) {}
  ~PlayerRateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerRateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerRateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerRateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerRateResponse(const PlayerRateResponse& from) : PlayerRateResponse(nullptr, from) {}
  inline PlayerRateResponse(PlayerRateResponse&& from) noexcept
      : PlayerRateResponse(nullptr, std::move(from)) {}
  inline PlayerRateResponse& operator=(const PlayerRateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerRateResponse& operator=(PlayerRateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerRateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerRateResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerRateResponse*>(
        &_PlayerRateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(PlayerRateResponse& a, PlayerRateResponse& b) { a.Swap(&b); }
  inline void Swap(PlayerRateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerRateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerRateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerRateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerRateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerRateResponse& from) { PlayerRateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerRateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PlayerRateResponse"; }

 protected:
  explicit PlayerRateResponse(::google::protobuf::Arena* arena);
  PlayerRateResponse(::google::protobuf::Arena* arena, const PlayerRateResponse& from);
  PlayerRateResponse(::google::protobuf::Arena* arena, PlayerRateResponse&& from) noexcept
      : PlayerRateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTotalGamesFieldNumber = 1,
    kWinsFieldNumber = 2,
    kWinRatioFieldNumber = 3,
  };
  // int32 total_games = 1;
  void clear_total_games() ;
  ::int32_t total_games() const;
  void set_total_games(::int32_t value);

  private:
  ::int32_t _internal_total_games() const;
  void _internal_set_total_games(::int32_t value);

  public:
  // int32 wins = 2;
  void clear_wins() ;
  ::int32_t wins() const;
  void set_wins(::int32_t value);

  private:
  ::int32_t _internal_wins() const;
  void _internal_set_wins(::int32_t value);

  public:
  // float win_ratio = 3;
  void clear_win_ratio() ;
  float win_ratio() const;
  void set_win_ratio(float value);

  private:
  float _internal_win_ratio() const;
  void _internal_set_win_ratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PlayerRateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerRateResponse& from_msg);
    ::int32_t total_games_;
    ::int32_t wins_;
    float win_ratio_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PlayerRateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PlayerRateRequest) */ {
 public:
  inline PlayerRateRequest() : PlayerRateRequest(nullptr) {}
  ~PlayerRateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerRateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerRateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerRateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerRateRequest(const PlayerRateRequest& from) : PlayerRateRequest(nullptr, from) {}
  inline PlayerRateRequest(PlayerRateRequest&& from) noexcept
      : PlayerRateRequest(nullptr, std::move(from)) {}
  inline PlayerRateRequest& operator=(const PlayerRateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerRateRequest& operator=(PlayerRateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerRateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerRateRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerRateRequest*>(
        &_PlayerRateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(PlayerRateRequest& a, PlayerRateRequest& b) { a.Swap(&b); }
  inline void Swap(PlayerRateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerRateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerRateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerRateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerRateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerRateRequest& from) { PlayerRateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerRateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PlayerRateRequest"; }

 protected:
  explicit PlayerRateRequest(::google::protobuf::Arena* arena);
  PlayerRateRequest(::google::protobuf::Arena* arena, const PlayerRateRequest& from);
  PlayerRateRequest(::google::protobuf::Arena* arena, PlayerRateRequest&& from) noexcept
      : PlayerRateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PlayerRateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerRateRequest& from_msg);
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PlayerRanking final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PlayerRanking) */ {
 public:
  inline PlayerRanking() : PlayerRanking(nullptr) {}
  ~PlayerRanking() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerRanking* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerRanking));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerRanking(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerRanking(const PlayerRanking& from) : PlayerRanking(nullptr, from) {}
  inline PlayerRanking(PlayerRanking&& from) noexcept
      : PlayerRanking(nullptr, std::move(from)) {}
  inline PlayerRanking& operator=(const PlayerRanking& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerRanking& operator=(PlayerRanking&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerRanking& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerRanking* internal_default_instance() {
    return reinterpret_cast<const PlayerRanking*>(
        &_PlayerRanking_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(PlayerRanking& a, PlayerRanking& b) { a.Swap(&b); }
  inline void Swap(PlayerRanking* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerRanking* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerRanking* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerRanking>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerRanking& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerRanking& from) { PlayerRanking::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerRanking* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PlayerRanking"; }

 protected:
  explicit PlayerRanking(::google::protobuf::Arena* arena);
  PlayerRanking(::google::protobuf::Arena* arena, const PlayerRanking& from);
  PlayerRanking(::google::protobuf::Arena* arena, PlayerRanking&& from) noexcept
      : PlayerRanking(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerNameFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
    kWinsFieldNumber = 3,
  };
  // string player_name = 2;
  void clear_player_name() ;
  const std::string& player_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player_name(Arg_&& arg, Args_... args);
  std::string* mutable_player_name();
  PROTOBUF_NODISCARD std::string* release_player_name();
  void set_allocated_player_name(std::string* value);

  private:
  const std::string& _internal_player_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_player_name(
      const std::string& value);
  std::string* _internal_mutable_player_name();

  public:
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // int32 wins = 3;
  void clear_wins() ;
  ::int32_t wins() const;
  void set_wins(::int32_t value);

  private:
  ::int32_t _internal_wins() const;
  void _internal_set_wins(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PlayerRanking)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerRanking& from_msg);
    ::google::protobuf::internal::ArenaStringPtr player_name_;
    ::int32_t player_id_;
    ::int32_t wins_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PlayValidationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PlayValidationResponse) */ {
 public:
  inline PlayValidationResponse() : PlayValidationResponse(nullptr) {}
  ~PlayValidationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayValidationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayValidationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayValidationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayValidationResponse(const PlayValidationResponse& from) : PlayValidationResponse(nullptr, from) {}
  inline PlayValidationResponse(PlayValidationResponse&& from) noexcept
      : PlayValidationResponse(nullptr, std::move(from)) {}
  inline PlayValidationResponse& operator=(const PlayValidationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayValidationResponse& operator=(PlayValidationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayValidationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayValidationResponse* internal_default_instance() {
    return reinterpret_cast<const PlayValidationResponse*>(
        &_PlayValidationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(PlayValidationResponse& a, PlayValidationResponse& b) { a.Swap(&b); }
  inline void Swap(PlayValidationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayValidationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayValidationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayValidationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayValidationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayValidationResponse& from) { PlayValidationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayValidationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PlayValidationResponse"; }

 protected:
  explicit PlayValidationResponse(::google::protobuf::Arena* arena);
  PlayValidationResponse(::google::protobuf::Arena* arena, const PlayValidationResponse& from);
  PlayValidationResponse(::google::protobuf::Arena* arena, PlayValidationResponse&& from) noexcept
      : PlayValidationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kIsValidFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool is_valid = 1;
  void clear_is_valid() ;
  bool is_valid() const;
  void set_is_valid(bool value);

  private:
  bool _internal_is_valid() const;
  void _internal_set_is_valid(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PlayValidationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayValidationResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool is_valid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PlayResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PlayResponse) */ {
 public:
  inline PlayResponse() : PlayResponse(nullptr) {}
  ~PlayResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayResponse(const PlayResponse& from) : PlayResponse(nullptr, from) {}
  inline PlayResponse(PlayResponse&& from) noexcept
      : PlayResponse(nullptr, std::move(from)) {}
  inline PlayResponse& operator=(const PlayResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayResponse& operator=(PlayResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayResponse* internal_default_instance() {
    return reinterpret_cast<const PlayResponse*>(
        &_PlayResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PlayResponse& a, PlayResponse& b) { a.Swap(&b); }
  inline void Swap(PlayResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayResponse& from) { PlayResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PlayResponse"; }

 protected:
  explicit PlayResponse(::google::protobuf::Arena* arena);
  PlayResponse(::google::protobuf::Arena* arena, const PlayResponse& from);
  PlayResponse(::google::protobuf::Arena* arena, PlayResponse&& from) noexcept
      : PlayResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PlayResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PassResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PassResponse) */ {
 public:
  inline PassResponse() : PassResponse(nullptr) {}
  ~PassResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PassResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PassResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PassResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PassResponse(const PassResponse& from) : PassResponse(nullptr, from) {}
  inline PassResponse(PassResponse&& from) noexcept
      : PassResponse(nullptr, std::move(from)) {}
  inline PassResponse& operator=(const PassResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PassResponse& operator=(PassResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PassResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PassResponse* internal_default_instance() {
    return reinterpret_cast<const PassResponse*>(
        &_PassResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PassResponse& a, PassResponse& b) { a.Swap(&b); }
  inline void Swap(PassResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PassResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PassResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PassResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PassResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PassResponse& from) { PassResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PassResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PassResponse"; }

 protected:
  explicit PassResponse(::google::protobuf::Arena* arena);
  PassResponse(::google::protobuf::Arena* arena, const PassResponse& from);
  PassResponse(::google::protobuf::Arena* arena, PassResponse&& from) noexcept
      : PassResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PassResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PassResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PassRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PassRequest) */ {
 public:
  inline PassRequest() : PassRequest(nullptr) {}
  ~PassRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PassRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PassRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PassRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PassRequest(const PassRequest& from) : PassRequest(nullptr, from) {}
  inline PassRequest(PassRequest&& from) noexcept
      : PassRequest(nullptr, std::move(from)) {}
  inline PassRequest& operator=(const PassRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PassRequest& operator=(PassRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PassRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PassRequest* internal_default_instance() {
    return reinterpret_cast<const PassRequest*>(
        &_PassRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PassRequest& a, PassRequest& b) { a.Swap(&b); }
  inline void Swap(PassRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PassRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PassRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PassRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PassRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PassRequest& from) { PassRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PassRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PassRequest"; }

 protected:
  explicit PassRequest(::google::protobuf::Arena* arena);
  PassRequest(::google::protobuf::Arena* arena, const PassRequest& from);
  PassRequest(::google::protobuf::Arena* arena, PassRequest&& from) noexcept
      : PassRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PassRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PassRequest& from_msg);
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class JoinRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.JoinRequest) */ {
 public:
  inline JoinRequest() : JoinRequest(nullptr) {}
  ~JoinRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JoinRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JoinRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JoinRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline JoinRequest(const JoinRequest& from) : JoinRequest(nullptr, from) {}
  inline JoinRequest(JoinRequest&& from) noexcept
      : JoinRequest(nullptr, std::move(from)) {}
  inline JoinRequest& operator=(const JoinRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinRequest& operator=(JoinRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JoinRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinRequest* internal_default_instance() {
    return reinterpret_cast<const JoinRequest*>(
        &_JoinRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(JoinRequest& a, JoinRequest& b) { a.Swap(&b); }
  inline void Swap(JoinRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JoinRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JoinRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JoinRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JoinRequest& from) { JoinRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JoinRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.JoinRequest"; }

 protected:
  explicit JoinRequest(::google::protobuf::Arena* arena);
  JoinRequest(::google::protobuf::Arena* arena, const JoinRequest& from);
  JoinRequest(::google::protobuf::Arena* arena, JoinRequest&& from) noexcept
      : JoinRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerNameFieldNumber = 1,
  };
  // string player_name = 1;
  void clear_player_name() ;
  const std::string& player_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player_name(Arg_&& arg, Args_... args);
  std::string* mutable_player_name();
  PROTOBUF_NODISCARD std::string* release_player_name();
  void set_allocated_player_name(std::string* value);

  private:
  const std::string& _internal_player_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_player_name(
      const std::string& value);
  std::string* _internal_mutable_player_name();

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.JoinRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JoinRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr player_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class GameStateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.GameStateRequest) */ {
 public:
  inline GameStateRequest() : GameStateRequest(nullptr) {}
  ~GameStateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GameStateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GameStateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameStateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameStateRequest(const GameStateRequest& from) : GameStateRequest(nullptr, from) {}
  inline GameStateRequest(GameStateRequest&& from) noexcept
      : GameStateRequest(nullptr, std::move(from)) {}
  inline GameStateRequest& operator=(const GameStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameStateRequest& operator=(GameStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameStateRequest* internal_default_instance() {
    return reinterpret_cast<const GameStateRequest*>(
        &_GameStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GameStateRequest& a, GameStateRequest& b) { a.Swap(&b); }
  inline void Swap(GameStateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameStateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GameStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameStateRequest& from) { GameStateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GameStateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.GameStateRequest"; }

 protected:
  explicit GameStateRequest(::google::protobuf::Arena* arena);
  GameStateRequest(::google::protobuf::Arena* arena, const GameStateRequest& from);
  GameStateRequest(::google::protobuf::Arena* arena, GameStateRequest&& from) noexcept
      : GameStateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.GameStateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameStateRequest& from_msg);
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class DealRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.DealRequest) */ {
 public:
  inline DealRequest() : DealRequest(nullptr) {}
  ~DealRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DealRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DealRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DealRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DealRequest(const DealRequest& from) : DealRequest(nullptr, from) {}
  inline DealRequest(DealRequest&& from) noexcept
      : DealRequest(nullptr, std::move(from)) {}
  inline DealRequest& operator=(const DealRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DealRequest& operator=(DealRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DealRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DealRequest* internal_default_instance() {
    return reinterpret_cast<const DealRequest*>(
        &_DealRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(DealRequest& a, DealRequest& b) { a.Swap(&b); }
  inline void Swap(DealRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DealRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DealRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DealRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DealRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DealRequest& from) { DealRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DealRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.DealRequest"; }

 protected:
  explicit DealRequest(::google::protobuf::Arena* arena);
  DealRequest(::google::protobuf::Arena* arena, const DealRequest& from);
  DealRequest(::google::protobuf::Arena* arena, DealRequest&& from) noexcept
      : DealRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdsFieldNumber = 1,
  };
  // repeated int32 player_ids = 1;
  int player_ids_size() const;
  private:
  int _internal_player_ids_size() const;

  public:
  void clear_player_ids() ;
  ::int32_t player_ids(int index) const;
  void set_player_ids(int index, ::int32_t value);
  void add_player_ids(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& player_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_player_ids();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_player_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_player_ids();

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.DealRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DealRequest& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> player_ids_;
    ::google::protobuf::internal::CachedSize _player_ids_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class ChatResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.ChatResponse) */ {
 public:
  inline ChatResponse() : ChatResponse(nullptr) {}
  ~ChatResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChatResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChatResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChatResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChatResponse(const ChatResponse& from) : ChatResponse(nullptr, from) {}
  inline ChatResponse(ChatResponse&& from) noexcept
      : ChatResponse(nullptr, std::move(from)) {}
  inline ChatResponse& operator=(const ChatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatResponse& operator=(ChatResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChatResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChatResponse* internal_default_instance() {
    return reinterpret_cast<const ChatResponse*>(
        &_ChatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ChatResponse& a, ChatResponse& b) { a.Swap(&b); }
  inline void Swap(ChatResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChatResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChatResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChatResponse& from) { ChatResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChatResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.ChatResponse"; }

 protected:
  explicit ChatResponse(::google::protobuf::Arena* arena);
  ChatResponse(::google::protobuf::Arena* arena, const ChatResponse& from);
  ChatResponse(::google::protobuf::Arena* arena, ChatResponse&& from) noexcept
      : ChatResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.ChatResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChatResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class ChatRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.ChatRequest) */ {
 public:
  inline ChatRequest() : ChatRequest(nullptr) {}
  ~ChatRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChatRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChatRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChatRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChatRequest(const ChatRequest& from) : ChatRequest(nullptr, from) {}
  inline ChatRequest(ChatRequest&& from) noexcept
      : ChatRequest(nullptr, std::move(from)) {}
  inline ChatRequest& operator=(const ChatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatRequest& operator=(ChatRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChatRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChatRequest* internal_default_instance() {
    return reinterpret_cast<const ChatRequest*>(
        &_ChatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ChatRequest& a, ChatRequest& b) { a.Swap(&b); }
  inline void Swap(ChatRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChatRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChatRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChatRequest& from) { ChatRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChatRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.ChatRequest"; }

 protected:
  explicit ChatRequest(::google::protobuf::Arena* arena);
  ChatRequest(::google::protobuf::Arena* arena, const ChatRequest& from);
  ChatRequest(::google::protobuf::Arena* arena, ChatRequest&& from) noexcept
      : ChatRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.ChatRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      34, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChatRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class Card final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.Card) */ {
 public:
  inline Card() : Card(nullptr) {}
  ~Card() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Card* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Card));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Card(
      ::google::protobuf::internal::ConstantInitialized);

  inline Card(const Card& from) : Card(nullptr, from) {}
  inline Card(Card&& from) noexcept
      : Card(nullptr, std::move(from)) {}
  inline Card& operator=(const Card& from) {
    CopyFrom(from);
    return *this;
  }
  inline Card& operator=(Card&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Card& default_instance() {
    return *internal_default_instance();
  }
  static inline const Card* internal_default_instance() {
    return reinterpret_cast<const Card*>(
        &_Card_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(Card& a, Card& b) { a.Swap(&b); }
  inline void Swap(Card* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Card* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Card* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Card>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Card& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Card& from) { Card::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Card* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.Card"; }

 protected:
  explicit Card(::google::protobuf::Arena* arena);
  Card(::google::protobuf::Arena* arena, const Card& from);
  Card(::google::protobuf::Arena* arena, Card&& from) noexcept
      : Card(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuitFieldNumber = 1,
    kRankFieldNumber = 2,
  };
  // string suit = 1;
  void clear_suit() ;
  const std::string& suit() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_suit(Arg_&& arg, Args_... args);
  std::string* mutable_suit();
  PROTOBUF_NODISCARD std::string* release_suit();
  void set_allocated_suit(std::string* value);

  private:
  const std::string& _internal_suit() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_suit(
      const std::string& value);
  std::string* _internal_mutable_suit();

  public:
  // int32 rank = 2;
  void clear_rank() ;
  ::int32_t rank() const;
  void set_rank(::int32_t value);

  private:
  ::int32_t _internal_rank() const;
  void _internal_set_rank(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.Card)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      24, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Card& from_msg);
    ::google::protobuf::internal::ArenaStringPtr suit_;
    ::int32_t rank_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class ActivityLogRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.ActivityLogRequest) */ {
 public:
  inline ActivityLogRequest() : ActivityLogRequest(nullptr) {}
  ~ActivityLogRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActivityLogRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActivityLogRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActivityLogRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActivityLogRequest(const ActivityLogRequest& from) : ActivityLogRequest(nullptr, from) {}
  inline ActivityLogRequest(ActivityLogRequest&& from) noexcept
      : ActivityLogRequest(nullptr, std::move(from)) {}
  inline ActivityLogRequest& operator=(const ActivityLogRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivityLogRequest& operator=(ActivityLogRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActivityLogRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActivityLogRequest* internal_default_instance() {
    return reinterpret_cast<const ActivityLogRequest*>(
        &_ActivityLogRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(ActivityLogRequest& a, ActivityLogRequest& b) { a.Swap(&b); }
  inline void Swap(ActivityLogRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivityLogRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActivityLogRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActivityLogRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActivityLogRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActivityLogRequest& from) { ActivityLogRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActivityLogRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.ActivityLogRequest"; }

 protected:
  explicit ActivityLogRequest(::google::protobuf::Arena* arena);
  ActivityLogRequest(::google::protobuf::Arena* arena, const ActivityLogRequest& from);
  ActivityLogRequest(::google::protobuf::Arena* arena, ActivityLogRequest&& from) noexcept
      : ActivityLogRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLimitFieldNumber = 1,
  };
  // int32 limit = 1;
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.ActivityLogRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActivityLogRequest& from_msg);
    ::int32_t limit_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class ActivityEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.ActivityEntry) */ {
 public:
  inline ActivityEntry() : ActivityEntry(nullptr) {}
  ~ActivityEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActivityEntry* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActivityEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActivityEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActivityEntry(const ActivityEntry& from) : ActivityEntry(nullptr, from) {}
  inline ActivityEntry(ActivityEntry&& from) noexcept
      : ActivityEntry(nullptr, std::move(from)) {}
  inline ActivityEntry& operator=(const ActivityEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivityEntry& operator=(ActivityEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActivityEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActivityEntry* internal_default_instance() {
    return reinterpret_cast<const ActivityEntry*>(
        &_ActivityEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(ActivityEntry& a, ActivityEntry& b) { a.Swap(&b); }
  inline void Swap(ActivityEntry* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivityEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActivityEntry* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActivityEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActivityEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActivityEntry& from) { ActivityEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActivityEntry* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.ActivityEntry"; }

 protected:
  explicit ActivityEntry(::google::protobuf::Arena* arena);
  ActivityEntry(::google::protobuf::Arena* arena, const ActivityEntry& from);
  ActivityEntry(::google::protobuf::Arena* arena, ActivityEntry&& from) noexcept
      : ActivityEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 3,
    kGameIdFieldNumber = 1,
    kWinnerFieldNumber = 2,
  };
  // string timestamp = 3;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // int32 game_id = 1;
  void clear_game_id() ;
  ::int32_t game_id() const;
  void set_game_id(::int32_t value);

  private:
  ::int32_t _internal_game_id() const;
  void _internal_set_game_id(::int32_t value);

  public:
  // int32 winner = 2;
  void clear_winner() ;
  ::int32_t winner() const;
  void set_winner(::int32_t value);

  private:
  ::int32_t _internal_winner() const;
  void _internal_set_winner(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.ActivityEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActivityEntry& from_msg);
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::int32_t game_id_;
    ::int32_t winner_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class ScoreResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.ScoreResponse) */ {
 public:
  inline ScoreResponse() : ScoreResponse(nullptr) {}
  ~ScoreResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScoreResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScoreResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScoreResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScoreResponse(const ScoreResponse& from) : ScoreResponse(nullptr, from) {}
  inline ScoreResponse(ScoreResponse&& from) noexcept
      : ScoreResponse(nullptr, std::move(from)) {}
  inline ScoreResponse& operator=(const ScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScoreResponse& operator=(ScoreResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScoreResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScoreResponse* internal_default_instance() {
    return reinterpret_cast<const ScoreResponse*>(
        &_ScoreResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(ScoreResponse& a, ScoreResponse& b) { a.Swap(&b); }
  inline void Swap(ScoreResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScoreResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScoreResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScoreResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScoreResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScoreResponse& from) { ScoreResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScoreResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.ScoreResponse"; }

 protected:
  explicit ScoreResponse(::google::protobuf::Arena* arena);
  ScoreResponse(::google::protobuf::Arena* arena, const ScoreResponse& from);
  ScoreResponse(::google::protobuf::Arena* arena, ScoreResponse&& from) noexcept
      : ScoreResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScoresFieldNumber = 1,
  };
  // map<int32, int32> scores = 1;
  int scores_size() const;
  private:
  int _internal_scores_size() const;

  public:
  void clear_scores() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& scores() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_scores();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_scores() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_scores();

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.ScoreResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScoreResponse& from_msg);
    ::google::protobuf::internal::MapField<ScoreResponse_ScoresEntry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        scores_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class RankingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.RankingResponse) */ {
 public:
  inline RankingResponse() : RankingResponse(nullptr) {}
  ~RankingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RankingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RankingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RankingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RankingResponse(const RankingResponse& from) : RankingResponse(nullptr, from) {}
  inline RankingResponse(RankingResponse&& from) noexcept
      : RankingResponse(nullptr, std::move(from)) {}
  inline RankingResponse& operator=(const RankingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RankingResponse& operator=(RankingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RankingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RankingResponse* internal_default_instance() {
    return reinterpret_cast<const RankingResponse*>(
        &_RankingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(RankingResponse& a, RankingResponse& b) { a.Swap(&b); }
  inline void Swap(RankingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RankingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RankingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RankingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RankingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RankingResponse& from) { RankingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RankingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.RankingResponse"; }

 protected:
  explicit RankingResponse(::google::protobuf::Arena* arena);
  RankingResponse(::google::protobuf::Arena* arena, const RankingResponse& from);
  RankingResponse(::google::protobuf::Arena* arena, RankingResponse&& from) noexcept
      : RankingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRankingFieldNumber = 1,
  };
  // repeated .bigtwo.PlayerRanking ranking = 1;
  int ranking_size() const;
  private:
  int _internal_ranking_size() const;

  public:
  void clear_ranking() ;
  ::bigtwo::PlayerRanking* mutable_ranking(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::PlayerRanking>* mutable_ranking();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::PlayerRanking>& _internal_ranking() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::PlayerRanking>* _internal_mutable_ranking();
  public:
  const ::bigtwo::PlayerRanking& ranking(int index) const;
  ::bigtwo::PlayerRanking* add_ranking();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::PlayerRanking>& ranking() const;
  // @@protoc_insertion_point(class_scope:bigtwo.RankingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RankingResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::bigtwo::PlayerRanking > ranking_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PlayValidationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PlayValidationRequest) */ {
 public:
  inline PlayValidationRequest() : PlayValidationRequest(nullptr) {}
  ~PlayValidationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayValidationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayValidationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayValidationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayValidationRequest(const PlayValidationRequest& from) : PlayValidationRequest(nullptr, from) {}
  inline PlayValidationRequest(PlayValidationRequest&& from) noexcept
      : PlayValidationRequest(nullptr, std::move(from)) {}
  inline PlayValidationRequest& operator=(const PlayValidationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayValidationRequest& operator=(PlayValidationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayValidationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayValidationRequest* internal_default_instance() {
    return reinterpret_cast<const PlayValidationRequest*>(
        &_PlayValidationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(PlayValidationRequest& a, PlayValidationRequest& b) { a.Swap(&b); }
  inline void Swap(PlayValidationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayValidationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayValidationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayValidationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayValidationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayValidationRequest& from) { PlayValidationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayValidationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PlayValidationRequest"; }

 protected:
  explicit PlayValidationRequest(::google::protobuf::Arena* arena);
  PlayValidationRequest(::google::protobuf::Arena* arena, const PlayValidationRequest& from);
  PlayValidationRequest(::google::protobuf::Arena* arena, PlayValidationRequest&& from) noexcept
      : PlayValidationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCardsFieldNumber = 2,
    kLastPlayedFieldNumber = 3,
    kPlayerIdFieldNumber = 1,
  };
  // repeated .bigtwo.Card cards = 2;
  int cards_size() const;
  private:
  int _internal_cards_size() const;

  public:
  void clear_cards() ;
  ::bigtwo::Card* mutable_cards(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* mutable_cards();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& _internal_cards() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* _internal_mutable_cards();
  public:
  const ::bigtwo::Card& cards(int index) const;
  ::bigtwo::Card* add_cards();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& cards() const;
  // repeated .bigtwo.Card last_played = 3;
  int last_played_size() const;
  private:
  int _internal_last_played_size() const;

  public:
  void clear_last_played() ;
  ::bigtwo::Card* mutable_last_played(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* mutable_last_played();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& _internal_last_played() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* _internal_mutable_last_played();
  public:
  const ::bigtwo::Card& last_played(int index) const;
  ::bigtwo::Card* add_last_played();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& last_played() const;
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PlayValidationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayValidationRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::bigtwo::Card > cards_;
    ::google::protobuf::RepeatedPtrField< ::bigtwo::Card > last_played_;
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class PlayRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.PlayRequest) */ {
 public:
  inline PlayRequest() : PlayRequest(nullptr) {}
  ~PlayRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayRequest(const PlayRequest& from) : PlayRequest(nullptr, from) {}
  inline PlayRequest(PlayRequest&& from) noexcept
      : PlayRequest(nullptr, std::move(from)) {}
  inline PlayRequest& operator=(const PlayRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayRequest& operator=(PlayRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayRequest* internal_default_instance() {
    return reinterpret_cast<const PlayRequest*>(
        &_PlayRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PlayRequest& a, PlayRequest& b) { a.Swap(&b); }
  inline void Swap(PlayRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayRequest& from) { PlayRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.PlayRequest"; }

 protected:
  explicit PlayRequest(::google::protobuf::Arena* arena);
  PlayRequest(::google::protobuf::Arena* arena, const PlayRequest& from);
  PlayRequest(::google::protobuf::Arena* arena, PlayRequest&& from) noexcept
      : PlayRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCardsFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // repeated .bigtwo.Card cards = 2;
  int cards_size() const;
  private:
  int _internal_cards_size() const;

  public:
  void clear_cards() ;
  ::bigtwo::Card* mutable_cards(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* mutable_cards();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& _internal_cards() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* _internal_mutable_cards();
  public:
  const ::bigtwo::Card& cards(int index) const;
  ::bigtwo::Card* add_cards();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& cards() const;
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.PlayRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::bigtwo::Card > cards_;
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class JoinResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.JoinResponse) */ {
 public:
  inline JoinResponse() : JoinResponse(nullptr) {}
  ~JoinResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JoinResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JoinResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JoinResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline JoinResponse(const JoinResponse& from) : JoinResponse(nullptr, from) {}
  inline JoinResponse(JoinResponse&& from) noexcept
      : JoinResponse(nullptr, std::move(from)) {}
  inline JoinResponse& operator=(const JoinResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinResponse& operator=(JoinResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JoinResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinResponse* internal_default_instance() {
    return reinterpret_cast<const JoinResponse*>(
        &_JoinResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(JoinResponse& a, JoinResponse& b) { a.Swap(&b); }
  inline void Swap(JoinResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JoinResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JoinResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JoinResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JoinResponse& from) { JoinResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JoinResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.JoinResponse"; }

 protected:
  explicit JoinResponse(::google::protobuf::Arena* arena);
  JoinResponse(::google::protobuf::Arena* arena, const JoinResponse& from);
  JoinResponse(::google::protobuf::Arena* arena, JoinResponse&& from) noexcept
      : JoinResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHandFieldNumber = 2,
    kMessageFieldNumber = 3,
    kPlayerIdFieldNumber = 1,
  };
  // repeated .bigtwo.Card hand = 2;
  int hand_size() const;
  private:
  int _internal_hand_size() const;

  public:
  void clear_hand() ;
  ::bigtwo::Card* mutable_hand(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* mutable_hand();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& _internal_hand() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* _internal_mutable_hand();
  public:
  const ::bigtwo::Card& hand(int index) const;
  ::bigtwo::Card* add_hand();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& hand() const;
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // int32 player_id = 1;
  void clear_player_id() ;
  ::int32_t player_id() const;
  void set_player_id(::int32_t value);

  private:
  ::int32_t _internal_player_id() const;
  void _internal_set_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.JoinResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JoinResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::bigtwo::Card > hand_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class Hand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.Hand) */ {
 public:
  inline Hand() : Hand(nullptr) {}
  ~Hand() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Hand* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Hand));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Hand(
      ::google::protobuf::internal::ConstantInitialized);

  inline Hand(const Hand& from) : Hand(nullptr, from) {}
  inline Hand(Hand&& from) noexcept
      : Hand(nullptr, std::move(from)) {}
  inline Hand& operator=(const Hand& from) {
    CopyFrom(from);
    return *this;
  }
  inline Hand& operator=(Hand&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Hand& default_instance() {
    return *internal_default_instance();
  }
  static inline const Hand* internal_default_instance() {
    return reinterpret_cast<const Hand*>(
        &_Hand_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(Hand& a, Hand& b) { a.Swap(&b); }
  inline void Swap(Hand* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Hand* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Hand* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Hand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Hand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Hand& from) { Hand::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Hand* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.Hand"; }

 protected:
  explicit Hand(::google::protobuf::Arena* arena);
  Hand(::google::protobuf::Arena* arena, const Hand& from);
  Hand(::google::protobuf::Arena* arena, Hand&& from) noexcept
      : Hand(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCardsFieldNumber = 1,
  };
  // repeated .bigtwo.Card cards = 1;
  int cards_size() const;
  private:
  int _internal_cards_size() const;

  public:
  void clear_cards() ;
  ::bigtwo::Card* mutable_cards(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* mutable_cards();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& _internal_cards() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* _internal_mutable_cards();
  public:
  const ::bigtwo::Card& cards(int index) const;
  ::bigtwo::Card* add_cards();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& cards() const;
  // @@protoc_insertion_point(class_scope:bigtwo.Hand)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Hand& from_msg);
    ::google::protobuf::RepeatedPtrField< ::bigtwo::Card > cards_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class GameStateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.GameStateResponse) */ {
 public:
  inline GameStateResponse() : GameStateResponse(nullptr) {}
  ~GameStateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GameStateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GameStateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameStateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameStateResponse(const GameStateResponse& from) : GameStateResponse(nullptr, from) {}
  inline GameStateResponse(GameStateResponse&& from) noexcept
      : GameStateResponse(nullptr, std::move(from)) {}
  inline GameStateResponse& operator=(const GameStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameStateResponse& operator=(GameStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameStateResponse* internal_default_instance() {
    return reinterpret_cast<const GameStateResponse*>(
        &_GameStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GameStateResponse& a, GameStateResponse& b) { a.Swap(&b); }
  inline void Swap(GameStateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameStateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GameStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameStateResponse& from) { GameStateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GameStateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.GameStateResponse"; }

 protected:
  explicit GameStateResponse(::google::protobuf::Arena* arena);
  GameStateResponse(::google::protobuf::Arena* arena, const GameStateResponse& from);
  GameStateResponse(::google::protobuf::Arena* arena, GameStateResponse&& from) noexcept
      : GameStateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHandFieldNumber = 1,
    kLastPlayedCardsFieldNumber = 3,
    kPhaseFieldNumber = 4,
    kCurrentTurnPlayerIdFieldNumber = 2,
  };
  // repeated .bigtwo.Card hand = 1;
  int hand_size() const;
  private:
  int _internal_hand_size() const;

  public:
  void clear_hand() ;
  ::bigtwo::Card* mutable_hand(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* mutable_hand();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& _internal_hand() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* _internal_mutable_hand();
  public:
  const ::bigtwo::Card& hand(int index) const;
  ::bigtwo::Card* add_hand();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& hand() const;
  // repeated .bigtwo.Card last_played_cards = 3;
  int last_played_cards_size() const;
  private:
  int _internal_last_played_cards_size() const;

  public:
  void clear_last_played_cards() ;
  ::bigtwo::Card* mutable_last_played_cards(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* mutable_last_played_cards();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& _internal_last_played_cards() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* _internal_mutable_last_played_cards();
  public:
  const ::bigtwo::Card& last_played_cards(int index) const;
  ::bigtwo::Card* add_last_played_cards();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& last_played_cards() const;
  // string phase = 4;
  void clear_phase() ;
  const std::string& phase() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phase(Arg_&& arg, Args_... args);
  std::string* mutable_phase();
  PROTOBUF_NODISCARD std::string* release_phase();
  void set_allocated_phase(std::string* value);

  private:
  const std::string& _internal_phase() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phase(
      const std::string& value);
  std::string* _internal_mutable_phase();

  public:
  // int32 current_turn_player_id = 2;
  void clear_current_turn_player_id() ;
  ::int32_t current_turn_player_id() const;
  void set_current_turn_player_id(::int32_t value);

  private:
  ::int32_t _internal_current_turn_player_id() const;
  void _internal_set_current_turn_player_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.GameStateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameStateResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::bigtwo::Card > hand_;
    ::google::protobuf::RepeatedPtrField< ::bigtwo::Card > last_played_cards_;
    ::google::protobuf::internal::ArenaStringPtr phase_;
    ::int32_t current_turn_player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class ActivityLogResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.ActivityLogResponse) */ {
 public:
  inline ActivityLogResponse() : ActivityLogResponse(nullptr) {}
  ~ActivityLogResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActivityLogResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActivityLogResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActivityLogResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActivityLogResponse(const ActivityLogResponse& from) : ActivityLogResponse(nullptr, from) {}
  inline ActivityLogResponse(ActivityLogResponse&& from) noexcept
      : ActivityLogResponse(nullptr, std::move(from)) {}
  inline ActivityLogResponse& operator=(const ActivityLogResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivityLogResponse& operator=(ActivityLogResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActivityLogResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActivityLogResponse* internal_default_instance() {
    return reinterpret_cast<const ActivityLogResponse*>(
        &_ActivityLogResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(ActivityLogResponse& a, ActivityLogResponse& b) { a.Swap(&b); }
  inline void Swap(ActivityLogResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivityLogResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActivityLogResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActivityLogResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActivityLogResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActivityLogResponse& from) { ActivityLogResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActivityLogResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.ActivityLogResponse"; }

 protected:
  explicit ActivityLogResponse(::google::protobuf::Arena* arena);
  ActivityLogResponse(::google::protobuf::Arena* arena, const ActivityLogResponse& from);
  ActivityLogResponse(::google::protobuf::Arena* arena, ActivityLogResponse&& from) noexcept
      : ActivityLogResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .bigtwo.ActivityEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::bigtwo::ActivityEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::bigtwo::ActivityEntry>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::bigtwo::ActivityEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::bigtwo::ActivityEntry>* _internal_mutable_entries();
  public:
  const ::bigtwo::ActivityEntry& entries(int index) const;
  ::bigtwo::ActivityEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField<::bigtwo::ActivityEntry>& entries() const;
  // @@protoc_insertion_point(class_scope:bigtwo.ActivityLogResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActivityLogResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::bigtwo::ActivityEntry > entries_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class ScoreRequest_FinalHandsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ::int32_t, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ::int32_t, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ScoreRequest_FinalHandsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScoreRequest_FinalHandsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScoreRequest_FinalHandsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScoreRequest_FinalHandsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScoreRequest_FinalHandsEntry_DoNotUse*>(
        &_ScoreRequest_FinalHandsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_bigtwo_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class DealResponse_DealtHandsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ::int32_t, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ::int32_t, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  DealResponse_DealtHandsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DealResponse_DealtHandsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit DealResponse_DealtHandsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const DealResponse_DealtHandsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const DealResponse_DealtHandsEntry_DoNotUse*>(
        &_DealResponse_DealtHandsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_bigtwo_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ScoreRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.ScoreRequest) */ {
 public:
  inline ScoreRequest() : ScoreRequest(nullptr) {}
  ~ScoreRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScoreRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScoreRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScoreRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScoreRequest(const ScoreRequest& from) : ScoreRequest(nullptr, from) {}
  inline ScoreRequest(ScoreRequest&& from) noexcept
      : ScoreRequest(nullptr, std::move(from)) {}
  inline ScoreRequest& operator=(const ScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScoreRequest& operator=(ScoreRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScoreRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScoreRequest* internal_default_instance() {
    return reinterpret_cast<const ScoreRequest*>(
        &_ScoreRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ScoreRequest& a, ScoreRequest& b) { a.Swap(&b); }
  inline void Swap(ScoreRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScoreRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScoreRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScoreRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScoreRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScoreRequest& from) { ScoreRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScoreRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.ScoreRequest"; }

 protected:
  explicit ScoreRequest(::google::protobuf::Arena* arena);
  ScoreRequest(::google::protobuf::Arena* arena, const ScoreRequest& from);
  ScoreRequest(::google::protobuf::Arena* arena, ScoreRequest&& from) noexcept
      : ScoreRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdsFieldNumber = 1,
    kFinalHandsFieldNumber = 2,
  };
  // repeated int32 player_ids = 1;
  int player_ids_size() const;
  private:
  int _internal_player_ids_size() const;

  public:
  void clear_player_ids() ;
  ::int32_t player_ids(int index) const;
  void set_player_ids(int index, ::int32_t value);
  void add_player_ids(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& player_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_player_ids();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_player_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_player_ids();

  public:
  // map<int32, .bigtwo.Hand> final_hands = 2;
  int final_hands_size() const;
  private:
  int _internal_final_hands_size() const;

  public:
  void clear_final_hands() ;
  const ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>& final_hands() const;
  ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>* mutable_final_hands();

  private:
  const ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>& _internal_final_hands() const;
  ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>* _internal_mutable_final_hands();

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.ScoreRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScoreRequest& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> player_ids_;
    ::google::protobuf::internal::CachedSize _player_ids_cached_byte_size_;
    ::google::protobuf::internal::MapField<ScoreRequest_FinalHandsEntry_DoNotUse, ::int32_t, ::bigtwo::Hand,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        final_hands_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};
// -------------------------------------------------------------------

class DealResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bigtwo.DealResponse) */ {
 public:
  inline DealResponse() : DealResponse(nullptr) {}
  ~DealResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DealResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DealResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DealResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DealResponse(const DealResponse& from) : DealResponse(nullptr, from) {}
  inline DealResponse(DealResponse&& from) noexcept
      : DealResponse(nullptr, std::move(from)) {}
  inline DealResponse& operator=(const DealResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DealResponse& operator=(DealResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DealResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DealResponse* internal_default_instance() {
    return reinterpret_cast<const DealResponse*>(
        &_DealResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(DealResponse& a, DealResponse& b) { a.Swap(&b); }
  inline void Swap(DealResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DealResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DealResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DealResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DealResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DealResponse& from) { DealResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DealResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bigtwo.DealResponse"; }

 protected:
  explicit DealResponse(::google::protobuf::Arena* arena);
  DealResponse(::google::protobuf::Arena* arena, const DealResponse& from);
  DealResponse(::google::protobuf::Arena* arena, DealResponse&& from) noexcept
      : DealResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDealtHandsFieldNumber = 1,
  };
  // map<int32, .bigtwo.Hand> dealt_hands = 1;
  int dealt_hands_size() const;
  private:
  int _internal_dealt_hands_size() const;

  public:
  void clear_dealt_hands() ;
  const ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>& dealt_hands() const;
  ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>* mutable_dealt_hands();

  private:
  const ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>& _internal_dealt_hands() const;
  ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>* _internal_mutable_dealt_hands();

  public:
  // @@protoc_insertion_point(class_scope:bigtwo.DealResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DealResponse& from_msg);
    ::google::protobuf::internal::MapField<DealResponse_DealtHandsEntry_DoNotUse, ::int32_t, ::bigtwo::Hand,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        dealt_hands_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bigtwo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PlayRequest

// int32 player_id = 1;
inline void PlayRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t PlayRequest::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayRequest.player_id)
  return _internal_player_id();
}
inline void PlayRequest::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayRequest.player_id)
}
inline ::int32_t PlayRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PlayRequest::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// repeated .bigtwo.Card cards = 2;
inline int PlayRequest::_internal_cards_size() const {
  return _internal_cards().size();
}
inline int PlayRequest::cards_size() const {
  return _internal_cards_size();
}
inline void PlayRequest::clear_cards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cards_.Clear();
}
inline ::bigtwo::Card* PlayRequest::mutable_cards(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.PlayRequest.cards)
  return _internal_mutable_cards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* PlayRequest::mutable_cards()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.PlayRequest.cards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cards();
}
inline const ::bigtwo::Card& PlayRequest::cards(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.PlayRequest.cards)
  return _internal_cards().Get(index);
}
inline ::bigtwo::Card* PlayRequest::add_cards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::Card* _add = _internal_mutable_cards()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.PlayRequest.cards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& PlayRequest::cards() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.PlayRequest.cards)
  return _internal_cards();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>&
PlayRequest::_internal_cards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cards_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>*
PlayRequest::_internal_mutable_cards() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cards_;
}

// -------------------------------------------------------------------

// PlayResponse

// bool success = 1;
inline void PlayResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool PlayResponse::success() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayResponse.success)
  return _internal_success();
}
inline void PlayResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayResponse.success)
}
inline bool PlayResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void PlayResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void PlayResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& PlayResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.PlayResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.PlayResponse.message)
}
inline std::string* PlayResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:bigtwo.PlayResponse.message)
  return _s;
}
inline const std::string& PlayResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void PlayResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* PlayResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* PlayResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.PlayResponse.message)
  return _impl_.message_.Release();
}
inline void PlayResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.PlayResponse.message)
}

// -------------------------------------------------------------------

// PassRequest

// int32 player_id = 1;
inline void PassRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t PassRequest::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.PassRequest.player_id)
  return _internal_player_id();
}
inline void PassRequest::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.PassRequest.player_id)
}
inline ::int32_t PassRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PassRequest::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// PassResponse

// bool success = 1;
inline void PassResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool PassResponse::success() const {
  // @@protoc_insertion_point(field_get:bigtwo.PassResponse.success)
  return _internal_success();
}
inline void PassResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:bigtwo.PassResponse.success)
}
inline bool PassResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void PassResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void PassResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& PassResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.PassResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PassResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.PassResponse.message)
}
inline std::string* PassResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:bigtwo.PassResponse.message)
  return _s;
}
inline const std::string& PassResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void PassResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* PassResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* PassResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.PassResponse.message)
  return _impl_.message_.Release();
}
inline void PassResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.PassResponse.message)
}

// -------------------------------------------------------------------

// JoinRequest

// string player_name = 1;
inline void JoinRequest::clear_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.ClearToEmpty();
}
inline const std::string& JoinRequest::player_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.JoinRequest.player_name)
  return _internal_player_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JoinRequest::set_player_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.JoinRequest.player_name)
}
inline std::string* JoinRequest::mutable_player_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player_name();
  // @@protoc_insertion_point(field_mutable:bigtwo.JoinRequest.player_name)
  return _s;
}
inline const std::string& JoinRequest::_internal_player_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_name_.Get();
}
inline void JoinRequest::_internal_set_player_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.Set(value, GetArena());
}
inline std::string* JoinRequest::_internal_mutable_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.player_name_.Mutable( GetArena());
}
inline std::string* JoinRequest::release_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.JoinRequest.player_name)
  return _impl_.player_name_.Release();
}
inline void JoinRequest::set_allocated_player_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.player_name_.IsDefault()) {
    _impl_.player_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.JoinRequest.player_name)
}

// -------------------------------------------------------------------

// JoinResponse

// int32 player_id = 1;
inline void JoinResponse::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t JoinResponse::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.JoinResponse.player_id)
  return _internal_player_id();
}
inline void JoinResponse::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.JoinResponse.player_id)
}
inline ::int32_t JoinResponse::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void JoinResponse::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// repeated .bigtwo.Card hand = 2;
inline int JoinResponse::_internal_hand_size() const {
  return _internal_hand().size();
}
inline int JoinResponse::hand_size() const {
  return _internal_hand_size();
}
inline void JoinResponse::clear_hand() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hand_.Clear();
}
inline ::bigtwo::Card* JoinResponse::mutable_hand(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.JoinResponse.hand)
  return _internal_mutable_hand()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* JoinResponse::mutable_hand()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.JoinResponse.hand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hand();
}
inline const ::bigtwo::Card& JoinResponse::hand(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.JoinResponse.hand)
  return _internal_hand().Get(index);
}
inline ::bigtwo::Card* JoinResponse::add_hand() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::Card* _add = _internal_mutable_hand()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.JoinResponse.hand)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& JoinResponse::hand() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.JoinResponse.hand)
  return _internal_hand();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>&
JoinResponse::_internal_hand() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hand_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>*
JoinResponse::_internal_mutable_hand() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hand_;
}

// string message = 3;
inline void JoinResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& JoinResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.JoinResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JoinResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.JoinResponse.message)
}
inline std::string* JoinResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:bigtwo.JoinResponse.message)
  return _s;
}
inline const std::string& JoinResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void JoinResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* JoinResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* JoinResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.JoinResponse.message)
  return _impl_.message_.Release();
}
inline void JoinResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.JoinResponse.message)
}

// -------------------------------------------------------------------

// GameStateRequest

// int32 player_id = 1;
inline void GameStateRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t GameStateRequest::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.GameStateRequest.player_id)
  return _internal_player_id();
}
inline void GameStateRequest::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.GameStateRequest.player_id)
}
inline ::int32_t GameStateRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void GameStateRequest::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// GameStateResponse

// repeated .bigtwo.Card hand = 1;
inline int GameStateResponse::_internal_hand_size() const {
  return _internal_hand().size();
}
inline int GameStateResponse::hand_size() const {
  return _internal_hand_size();
}
inline void GameStateResponse::clear_hand() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hand_.Clear();
}
inline ::bigtwo::Card* GameStateResponse::mutable_hand(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.GameStateResponse.hand)
  return _internal_mutable_hand()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* GameStateResponse::mutable_hand()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.GameStateResponse.hand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hand();
}
inline const ::bigtwo::Card& GameStateResponse::hand(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.GameStateResponse.hand)
  return _internal_hand().Get(index);
}
inline ::bigtwo::Card* GameStateResponse::add_hand() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::Card* _add = _internal_mutable_hand()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.GameStateResponse.hand)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& GameStateResponse::hand() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.GameStateResponse.hand)
  return _internal_hand();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>&
GameStateResponse::_internal_hand() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hand_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>*
GameStateResponse::_internal_mutable_hand() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hand_;
}

// int32 current_turn_player_id = 2;
inline void GameStateResponse::clear_current_turn_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_turn_player_id_ = 0;
}
inline ::int32_t GameStateResponse::current_turn_player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.GameStateResponse.current_turn_player_id)
  return _internal_current_turn_player_id();
}
inline void GameStateResponse::set_current_turn_player_id(::int32_t value) {
  _internal_set_current_turn_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.GameStateResponse.current_turn_player_id)
}
inline ::int32_t GameStateResponse::_internal_current_turn_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_turn_player_id_;
}
inline void GameStateResponse::_internal_set_current_turn_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_turn_player_id_ = value;
}

// repeated .bigtwo.Card last_played_cards = 3;
inline int GameStateResponse::_internal_last_played_cards_size() const {
  return _internal_last_played_cards().size();
}
inline int GameStateResponse::last_played_cards_size() const {
  return _internal_last_played_cards_size();
}
inline void GameStateResponse::clear_last_played_cards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_played_cards_.Clear();
}
inline ::bigtwo::Card* GameStateResponse::mutable_last_played_cards(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.GameStateResponse.last_played_cards)
  return _internal_mutable_last_played_cards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* GameStateResponse::mutable_last_played_cards()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.GameStateResponse.last_played_cards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_last_played_cards();
}
inline const ::bigtwo::Card& GameStateResponse::last_played_cards(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.GameStateResponse.last_played_cards)
  return _internal_last_played_cards().Get(index);
}
inline ::bigtwo::Card* GameStateResponse::add_last_played_cards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::Card* _add = _internal_mutable_last_played_cards()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.GameStateResponse.last_played_cards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& GameStateResponse::last_played_cards() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.GameStateResponse.last_played_cards)
  return _internal_last_played_cards();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>&
GameStateResponse::_internal_last_played_cards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_played_cards_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>*
GameStateResponse::_internal_mutable_last_played_cards() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.last_played_cards_;
}

// string phase = 4;
inline void GameStateResponse::clear_phase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phase_.ClearToEmpty();
}
inline const std::string& GameStateResponse::phase() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.GameStateResponse.phase)
  return _internal_phase();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameStateResponse::set_phase(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phase_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.GameStateResponse.phase)
}
inline std::string* GameStateResponse::mutable_phase() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phase();
  // @@protoc_insertion_point(field_mutable:bigtwo.GameStateResponse.phase)
  return _s;
}
inline const std::string& GameStateResponse::_internal_phase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phase_.Get();
}
inline void GameStateResponse::_internal_set_phase(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phase_.Set(value, GetArena());
}
inline std::string* GameStateResponse::_internal_mutable_phase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.phase_.Mutable( GetArena());
}
inline std::string* GameStateResponse::release_phase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.GameStateResponse.phase)
  return _impl_.phase_.Release();
}
inline void GameStateResponse::set_allocated_phase(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phase_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.phase_.IsDefault()) {
    _impl_.phase_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.GameStateResponse.phase)
}

// -------------------------------------------------------------------

// ChatRequest

// int32 player_id = 1;
inline void ChatRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t ChatRequest::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.ChatRequest.player_id)
  return _internal_player_id();
}
inline void ChatRequest::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.ChatRequest.player_id)
}
inline ::int32_t ChatRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void ChatRequest::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// string message = 2;
inline void ChatRequest::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& ChatRequest::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.ChatRequest.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChatRequest::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.ChatRequest.message)
}
inline std::string* ChatRequest::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:bigtwo.ChatRequest.message)
  return _s;
}
inline const std::string& ChatRequest::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ChatRequest::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* ChatRequest::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* ChatRequest::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.ChatRequest.message)
  return _impl_.message_.Release();
}
inline void ChatRequest::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.ChatRequest.message)
}

// -------------------------------------------------------------------

// ChatResponse

// bool success = 1;
inline void ChatResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ChatResponse::success() const {
  // @@protoc_insertion_point(field_get:bigtwo.ChatResponse.success)
  return _internal_success();
}
inline void ChatResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:bigtwo.ChatResponse.success)
}
inline bool ChatResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ChatResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// StartGameRequest

// int32 initiator_player_id = 1;
inline void StartGameRequest::clear_initiator_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiator_player_id_ = 0;
}
inline ::int32_t StartGameRequest::initiator_player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.StartGameRequest.initiator_player_id)
  return _internal_initiator_player_id();
}
inline void StartGameRequest::set_initiator_player_id(::int32_t value) {
  _internal_set_initiator_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.StartGameRequest.initiator_player_id)
}
inline ::int32_t StartGameRequest::_internal_initiator_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initiator_player_id_;
}
inline void StartGameRequest::_internal_set_initiator_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiator_player_id_ = value;
}

// -------------------------------------------------------------------

// StartGameResponse

// bool success = 1;
inline void StartGameResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool StartGameResponse::success() const {
  // @@protoc_insertion_point(field_get:bigtwo.StartGameResponse.success)
  return _internal_success();
}
inline void StartGameResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:bigtwo.StartGameResponse.success)
}
inline bool StartGameResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void StartGameResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void StartGameResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& StartGameResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.StartGameResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartGameResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.StartGameResponse.message)
}
inline std::string* StartGameResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:bigtwo.StartGameResponse.message)
  return _s;
}
inline const std::string& StartGameResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void StartGameResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* StartGameResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* StartGameResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.StartGameResponse.message)
  return _impl_.message_.Release();
}
inline void StartGameResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.StartGameResponse.message)
}

// -------------------------------------------------------------------

// Card

// string suit = 1;
inline void Card::clear_suit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suit_.ClearToEmpty();
}
inline const std::string& Card::suit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.Card.suit)
  return _internal_suit();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Card::set_suit(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.Card.suit)
}
inline std::string* Card::mutable_suit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_suit();
  // @@protoc_insertion_point(field_mutable:bigtwo.Card.suit)
  return _s;
}
inline const std::string& Card::_internal_suit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suit_.Get();
}
inline void Card::_internal_set_suit(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suit_.Set(value, GetArena());
}
inline std::string* Card::_internal_mutable_suit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.suit_.Mutable( GetArena());
}
inline std::string* Card::release_suit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.Card.suit)
  return _impl_.suit_.Release();
}
inline void Card::set_allocated_suit(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.suit_.IsDefault()) {
    _impl_.suit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.Card.suit)
}

// int32 rank = 2;
inline void Card::clear_rank() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rank_ = 0;
}
inline ::int32_t Card::rank() const {
  // @@protoc_insertion_point(field_get:bigtwo.Card.rank)
  return _internal_rank();
}
inline void Card::set_rank(::int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:bigtwo.Card.rank)
}
inline ::int32_t Card::_internal_rank() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rank_;
}
inline void Card::_internal_set_rank(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rank_ = value;
}

// -------------------------------------------------------------------

// DealRequest

// repeated int32 player_ids = 1;
inline int DealRequest::_internal_player_ids_size() const {
  return _internal_player_ids().size();
}
inline int DealRequest::player_ids_size() const {
  return _internal_player_ids_size();
}
inline void DealRequest::clear_player_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_ids_.Clear();
}
inline ::int32_t DealRequest::player_ids(int index) const {
  // @@protoc_insertion_point(field_get:bigtwo.DealRequest.player_ids)
  return _internal_player_ids().Get(index);
}
inline void DealRequest::set_player_ids(int index, ::int32_t value) {
  _internal_mutable_player_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:bigtwo.DealRequest.player_ids)
}
inline void DealRequest::add_player_ids(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_player_ids()->Add(value);
  // @@protoc_insertion_point(field_add:bigtwo.DealRequest.player_ids)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DealRequest::player_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.DealRequest.player_ids)
  return _internal_player_ids();
}
inline ::google::protobuf::RepeatedField<::int32_t>* DealRequest::mutable_player_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.DealRequest.player_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_player_ids();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
DealRequest::_internal_player_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_ids_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* DealRequest::_internal_mutable_player_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.player_ids_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DealResponse

// map<int32, .bigtwo.Hand> dealt_hands = 1;
inline int DealResponse::_internal_dealt_hands_size() const {
  return _internal_dealt_hands().size();
}
inline int DealResponse::dealt_hands_size() const {
  return _internal_dealt_hands_size();
}
inline void DealResponse::clear_dealt_hands() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dealt_hands_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>& DealResponse::_internal_dealt_hands() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dealt_hands_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>& DealResponse::dealt_hands() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bigtwo.DealResponse.dealt_hands)
  return _internal_dealt_hands();
}
inline ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>* DealResponse::_internal_mutable_dealt_hands() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dealt_hands_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>* DealResponse::mutable_dealt_hands() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bigtwo.DealResponse.dealt_hands)
  return _internal_mutable_dealt_hands();
}

// -------------------------------------------------------------------

// Hand

// repeated .bigtwo.Card cards = 1;
inline int Hand::_internal_cards_size() const {
  return _internal_cards().size();
}
inline int Hand::cards_size() const {
  return _internal_cards_size();
}
inline void Hand::clear_cards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cards_.Clear();
}
inline ::bigtwo::Card* Hand::mutable_cards(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.Hand.cards)
  return _internal_mutable_cards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* Hand::mutable_cards()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.Hand.cards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cards();
}
inline const ::bigtwo::Card& Hand::cards(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.Hand.cards)
  return _internal_cards().Get(index);
}
inline ::bigtwo::Card* Hand::add_cards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::Card* _add = _internal_mutable_cards()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.Hand.cards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& Hand::cards() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.Hand.cards)
  return _internal_cards();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>&
Hand::_internal_cards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cards_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>*
Hand::_internal_mutable_cards() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cards_;
}

// -------------------------------------------------------------------

// PlayValidationRequest

// int32 player_id = 1;
inline void PlayValidationRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t PlayValidationRequest::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayValidationRequest.player_id)
  return _internal_player_id();
}
inline void PlayValidationRequest::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayValidationRequest.player_id)
}
inline ::int32_t PlayValidationRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PlayValidationRequest::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// repeated .bigtwo.Card cards = 2;
inline int PlayValidationRequest::_internal_cards_size() const {
  return _internal_cards().size();
}
inline int PlayValidationRequest::cards_size() const {
  return _internal_cards_size();
}
inline void PlayValidationRequest::clear_cards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cards_.Clear();
}
inline ::bigtwo::Card* PlayValidationRequest::mutable_cards(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.PlayValidationRequest.cards)
  return _internal_mutable_cards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* PlayValidationRequest::mutable_cards()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.PlayValidationRequest.cards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cards();
}
inline const ::bigtwo::Card& PlayValidationRequest::cards(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.PlayValidationRequest.cards)
  return _internal_cards().Get(index);
}
inline ::bigtwo::Card* PlayValidationRequest::add_cards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::Card* _add = _internal_mutable_cards()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.PlayValidationRequest.cards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& PlayValidationRequest::cards() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.PlayValidationRequest.cards)
  return _internal_cards();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>&
PlayValidationRequest::_internal_cards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cards_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>*
PlayValidationRequest::_internal_mutable_cards() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cards_;
}

// repeated .bigtwo.Card last_played = 3;
inline int PlayValidationRequest::_internal_last_played_size() const {
  return _internal_last_played().size();
}
inline int PlayValidationRequest::last_played_size() const {
  return _internal_last_played_size();
}
inline void PlayValidationRequest::clear_last_played() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_played_.Clear();
}
inline ::bigtwo::Card* PlayValidationRequest::mutable_last_played(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.PlayValidationRequest.last_played)
  return _internal_mutable_last_played()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>* PlayValidationRequest::mutable_last_played()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.PlayValidationRequest.last_played)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_last_played();
}
inline const ::bigtwo::Card& PlayValidationRequest::last_played(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.PlayValidationRequest.last_played)
  return _internal_last_played().Get(index);
}
inline ::bigtwo::Card* PlayValidationRequest::add_last_played() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::Card* _add = _internal_mutable_last_played()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.PlayValidationRequest.last_played)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>& PlayValidationRequest::last_played() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.PlayValidationRequest.last_played)
  return _internal_last_played();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::Card>&
PlayValidationRequest::_internal_last_played() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_played_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::Card>*
PlayValidationRequest::_internal_mutable_last_played() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.last_played_;
}

// -------------------------------------------------------------------

// PlayValidationResponse

// bool is_valid = 1;
inline void PlayValidationResponse::clear_is_valid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_valid_ = false;
}
inline bool PlayValidationResponse::is_valid() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayValidationResponse.is_valid)
  return _internal_is_valid();
}
inline void PlayValidationResponse::set_is_valid(bool value) {
  _internal_set_is_valid(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayValidationResponse.is_valid)
}
inline bool PlayValidationResponse::_internal_is_valid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_valid_;
}
inline void PlayValidationResponse::_internal_set_is_valid(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_valid_ = value;
}

// string message = 2;
inline void PlayValidationResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& PlayValidationResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.PlayValidationResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayValidationResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.PlayValidationResponse.message)
}
inline std::string* PlayValidationResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:bigtwo.PlayValidationResponse.message)
  return _s;
}
inline const std::string& PlayValidationResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void PlayValidationResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* PlayValidationResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* PlayValidationResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.PlayValidationResponse.message)
  return _impl_.message_.Release();
}
inline void PlayValidationResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.PlayValidationResponse.message)
}

// -------------------------------------------------------------------

// TimeoutRequest

// int32 player_id = 1;
inline void TimeoutRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t TimeoutRequest::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.TimeoutRequest.player_id)
  return _internal_player_id();
}
inline void TimeoutRequest::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.TimeoutRequest.player_id)
}
inline ::int32_t TimeoutRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void TimeoutRequest::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// TimeoutResponse

// bool success = 1;
inline void TimeoutResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool TimeoutResponse::success() const {
  // @@protoc_insertion_point(field_get:bigtwo.TimeoutResponse.success)
  return _internal_success();
}
inline void TimeoutResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:bigtwo.TimeoutResponse.success)
}
inline bool TimeoutResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void TimeoutResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void TimeoutResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& TimeoutResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.TimeoutResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeoutResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.TimeoutResponse.message)
}
inline std::string* TimeoutResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:bigtwo.TimeoutResponse.message)
  return _s;
}
inline const std::string& TimeoutResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void TimeoutResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* TimeoutResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* TimeoutResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.TimeoutResponse.message)
  return _impl_.message_.Release();
}
inline void TimeoutResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.TimeoutResponse.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScoreRequest

// repeated int32 player_ids = 1;
inline int ScoreRequest::_internal_player_ids_size() const {
  return _internal_player_ids().size();
}
inline int ScoreRequest::player_ids_size() const {
  return _internal_player_ids_size();
}
inline void ScoreRequest::clear_player_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_ids_.Clear();
}
inline ::int32_t ScoreRequest::player_ids(int index) const {
  // @@protoc_insertion_point(field_get:bigtwo.ScoreRequest.player_ids)
  return _internal_player_ids().Get(index);
}
inline void ScoreRequest::set_player_ids(int index, ::int32_t value) {
  _internal_mutable_player_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:bigtwo.ScoreRequest.player_ids)
}
inline void ScoreRequest::add_player_ids(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_player_ids()->Add(value);
  // @@protoc_insertion_point(field_add:bigtwo.ScoreRequest.player_ids)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& ScoreRequest::player_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.ScoreRequest.player_ids)
  return _internal_player_ids();
}
inline ::google::protobuf::RepeatedField<::int32_t>* ScoreRequest::mutable_player_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.ScoreRequest.player_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_player_ids();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
ScoreRequest::_internal_player_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_ids_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* ScoreRequest::_internal_mutable_player_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.player_ids_;
}

// map<int32, .bigtwo.Hand> final_hands = 2;
inline int ScoreRequest::_internal_final_hands_size() const {
  return _internal_final_hands().size();
}
inline int ScoreRequest::final_hands_size() const {
  return _internal_final_hands_size();
}
inline void ScoreRequest::clear_final_hands() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_hands_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>& ScoreRequest::_internal_final_hands() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_hands_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>& ScoreRequest::final_hands() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bigtwo.ScoreRequest.final_hands)
  return _internal_final_hands();
}
inline ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>* ScoreRequest::_internal_mutable_final_hands() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.final_hands_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::bigtwo::Hand>* ScoreRequest::mutable_final_hands() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bigtwo.ScoreRequest.final_hands)
  return _internal_mutable_final_hands();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScoreResponse

// map<int32, int32> scores = 1;
inline int ScoreResponse::_internal_scores_size() const {
  return _internal_scores().size();
}
inline int ScoreResponse::scores_size() const {
  return _internal_scores_size();
}
inline void ScoreResponse::clear_scores() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scores_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& ScoreResponse::_internal_scores() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scores_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& ScoreResponse::scores() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bigtwo.ScoreResponse.scores)
  return _internal_scores();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* ScoreResponse::_internal_mutable_scores() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scores_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* ScoreResponse::mutable_scores() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bigtwo.ScoreResponse.scores)
  return _internal_mutable_scores();
}

// -------------------------------------------------------------------

// RankingRequest

// int32 top = 1;
inline void RankingRequest::clear_top() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_ = 0;
}
inline ::int32_t RankingRequest::top() const {
  // @@protoc_insertion_point(field_get:bigtwo.RankingRequest.top)
  return _internal_top();
}
inline void RankingRequest::set_top(::int32_t value) {
  _internal_set_top(value);
  // @@protoc_insertion_point(field_set:bigtwo.RankingRequest.top)
}
inline ::int32_t RankingRequest::_internal_top() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.top_;
}
inline void RankingRequest::_internal_set_top(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_ = value;
}

// -------------------------------------------------------------------

// RankingResponse

// repeated .bigtwo.PlayerRanking ranking = 1;
inline int RankingResponse::_internal_ranking_size() const {
  return _internal_ranking().size();
}
inline int RankingResponse::ranking_size() const {
  return _internal_ranking_size();
}
inline void RankingResponse::clear_ranking() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ranking_.Clear();
}
inline ::bigtwo::PlayerRanking* RankingResponse::mutable_ranking(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.RankingResponse.ranking)
  return _internal_mutable_ranking()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::PlayerRanking>* RankingResponse::mutable_ranking()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.RankingResponse.ranking)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ranking();
}
inline const ::bigtwo::PlayerRanking& RankingResponse::ranking(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.RankingResponse.ranking)
  return _internal_ranking().Get(index);
}
inline ::bigtwo::PlayerRanking* RankingResponse::add_ranking() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::PlayerRanking* _add = _internal_mutable_ranking()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.RankingResponse.ranking)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::PlayerRanking>& RankingResponse::ranking() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.RankingResponse.ranking)
  return _internal_ranking();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::PlayerRanking>&
RankingResponse::_internal_ranking() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ranking_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::PlayerRanking>*
RankingResponse::_internal_mutable_ranking() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ranking_;
}

// -------------------------------------------------------------------

// PlayerRanking

// int32 player_id = 1;
inline void PlayerRanking::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t PlayerRanking::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayerRanking.player_id)
  return _internal_player_id();
}
inline void PlayerRanking::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayerRanking.player_id)
}
inline ::int32_t PlayerRanking::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PlayerRanking::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// string player_name = 2;
inline void PlayerRanking::clear_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.ClearToEmpty();
}
inline const std::string& PlayerRanking::player_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.PlayerRanking.player_name)
  return _internal_player_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerRanking::set_player_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.PlayerRanking.player_name)
}
inline std::string* PlayerRanking::mutable_player_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player_name();
  // @@protoc_insertion_point(field_mutable:bigtwo.PlayerRanking.player_name)
  return _s;
}
inline const std::string& PlayerRanking::_internal_player_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_name_.Get();
}
inline void PlayerRanking::_internal_set_player_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.Set(value, GetArena());
}
inline std::string* PlayerRanking::_internal_mutable_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.player_name_.Mutable( GetArena());
}
inline std::string* PlayerRanking::release_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.PlayerRanking.player_name)
  return _impl_.player_name_.Release();
}
inline void PlayerRanking::set_allocated_player_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.player_name_.IsDefault()) {
    _impl_.player_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.PlayerRanking.player_name)
}

// int32 wins = 3;
inline void PlayerRanking::clear_wins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wins_ = 0;
}
inline ::int32_t PlayerRanking::wins() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayerRanking.wins)
  return _internal_wins();
}
inline void PlayerRanking::set_wins(::int32_t value) {
  _internal_set_wins(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayerRanking.wins)
}
inline ::int32_t PlayerRanking::_internal_wins() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wins_;
}
inline void PlayerRanking::_internal_set_wins(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wins_ = value;
}

// -------------------------------------------------------------------

// PlayerRateRequest

// int32 player_id = 1;
inline void PlayerRateRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0;
}
inline ::int32_t PlayerRateRequest::player_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayerRateRequest.player_id)
  return _internal_player_id();
}
inline void PlayerRateRequest::set_player_id(::int32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayerRateRequest.player_id)
}
inline ::int32_t PlayerRateRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PlayerRateRequest::_internal_set_player_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// PlayerRateResponse

// int32 total_games = 1;
inline void PlayerRateResponse::clear_total_games() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_games_ = 0;
}
inline ::int32_t PlayerRateResponse::total_games() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayerRateResponse.total_games)
  return _internal_total_games();
}
inline void PlayerRateResponse::set_total_games(::int32_t value) {
  _internal_set_total_games(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayerRateResponse.total_games)
}
inline ::int32_t PlayerRateResponse::_internal_total_games() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_games_;
}
inline void PlayerRateResponse::_internal_set_total_games(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_games_ = value;
}

// int32 wins = 2;
inline void PlayerRateResponse::clear_wins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wins_ = 0;
}
inline ::int32_t PlayerRateResponse::wins() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayerRateResponse.wins)
  return _internal_wins();
}
inline void PlayerRateResponse::set_wins(::int32_t value) {
  _internal_set_wins(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayerRateResponse.wins)
}
inline ::int32_t PlayerRateResponse::_internal_wins() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wins_;
}
inline void PlayerRateResponse::_internal_set_wins(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wins_ = value;
}

// float win_ratio = 3;
inline void PlayerRateResponse::clear_win_ratio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.win_ratio_ = 0;
}
inline float PlayerRateResponse::win_ratio() const {
  // @@protoc_insertion_point(field_get:bigtwo.PlayerRateResponse.win_ratio)
  return _internal_win_ratio();
}
inline void PlayerRateResponse::set_win_ratio(float value) {
  _internal_set_win_ratio(value);
  // @@protoc_insertion_point(field_set:bigtwo.PlayerRateResponse.win_ratio)
}
inline float PlayerRateResponse::_internal_win_ratio() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.win_ratio_;
}
inline void PlayerRateResponse::_internal_set_win_ratio(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.win_ratio_ = value;
}

// -------------------------------------------------------------------

// ActivityLogRequest

// int32 limit = 1;
inline void ActivityLogRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
}
inline ::int32_t ActivityLogRequest::limit() const {
  // @@protoc_insertion_point(field_get:bigtwo.ActivityLogRequest.limit)
  return _internal_limit();
}
inline void ActivityLogRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:bigtwo.ActivityLogRequest.limit)
}
inline ::int32_t ActivityLogRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void ActivityLogRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// -------------------------------------------------------------------

// ActivityLogResponse

// repeated .bigtwo.ActivityEntry entries = 1;
inline int ActivityLogResponse::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int ActivityLogResponse::entries_size() const {
  return _internal_entries_size();
}
inline void ActivityLogResponse::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::bigtwo::ActivityEntry* ActivityLogResponse::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bigtwo.ActivityLogResponse.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::ActivityEntry>* ActivityLogResponse::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bigtwo.ActivityLogResponse.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::bigtwo::ActivityEntry& ActivityLogResponse::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.ActivityLogResponse.entries)
  return _internal_entries().Get(index);
}
inline ::bigtwo::ActivityEntry* ActivityLogResponse::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::bigtwo::ActivityEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:bigtwo.ActivityLogResponse.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::ActivityEntry>& ActivityLogResponse::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bigtwo.ActivityLogResponse.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::bigtwo::ActivityEntry>&
ActivityLogResponse::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::bigtwo::ActivityEntry>*
ActivityLogResponse::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// ActivityEntry

// int32 game_id = 1;
inline void ActivityEntry::clear_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_ = 0;
}
inline ::int32_t ActivityEntry::game_id() const {
  // @@protoc_insertion_point(field_get:bigtwo.ActivityEntry.game_id)
  return _internal_game_id();
}
inline void ActivityEntry::set_game_id(::int32_t value) {
  _internal_set_game_id(value);
  // @@protoc_insertion_point(field_set:bigtwo.ActivityEntry.game_id)
}
inline ::int32_t ActivityEntry::_internal_game_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_id_;
}
inline void ActivityEntry::_internal_set_game_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_ = value;
}

// int32 winner = 2;
inline void ActivityEntry::clear_winner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winner_ = 0;
}
inline ::int32_t ActivityEntry::winner() const {
  // @@protoc_insertion_point(field_get:bigtwo.ActivityEntry.winner)
  return _internal_winner();
}
inline void ActivityEntry::set_winner(::int32_t value) {
  _internal_set_winner(value);
  // @@protoc_insertion_point(field_set:bigtwo.ActivityEntry.winner)
}
inline ::int32_t ActivityEntry::_internal_winner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.winner_;
}
inline void ActivityEntry::_internal_set_winner(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winner_ = value;
}

// string timestamp = 3;
inline void ActivityEntry::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& ActivityEntry::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bigtwo.ActivityEntry.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActivityEntry::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bigtwo.ActivityEntry.timestamp)
}
inline std::string* ActivityEntry::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:bigtwo.ActivityEntry.timestamp)
  return _s;
}
inline const std::string& ActivityEntry::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void ActivityEntry::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* ActivityEntry::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* ActivityEntry::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bigtwo.ActivityEntry.timestamp)
  return _impl_.timestamp_.Release();
}
inline void ActivityEntry::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bigtwo.ActivityEntry.timestamp)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace bigtwo


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // bigtwo_2eproto_2epb_2eh
